{
  "hash": "2f546bae5136255560558d2f623f43c7",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Arrow In-Memory Exercise\"\nexecute:\n  echo: true\n  messages: false\n  warning: false\neditor: source\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(arrow)\nlibrary(dplyr)\n```\n:::\n\n\n\n\n::: {#exercise-hello-nyc-taxi .callout-tip}\n## Arrow Table\n\n::: panel-tabset\n## Problems\n\n1.  Read in a single NYC Taxi parquet file using `read_parquet()` as an Arrow Table\n\n2.  Convert your Arrow Table object to a `data.frame` or a `tibble`\n\n## Solution 1\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nparquet_file <- \"data/nyc-taxi/year=2019/month=9/part-0.parquet\"\n\ntaxi_table <- read_parquet(parquet_file, as_data_frame = FALSE)\ntaxi_table\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nTable\n6567396 rows x 22 columns\n$vendor_name <string>\n$pickup_datetime <timestamp[ms]>\n$dropoff_datetime <timestamp[ms]>\n$passenger_count <int64>\n$trip_distance <double>\n$pickup_longitude <double>\n$pickup_latitude <double>\n$rate_code <string>\n$store_and_fwd <string>\n$dropoff_longitude <double>\n$dropoff_latitude <double>\n$payment_type <string>\n$fare_amount <double>\n$extra <double>\n$mta_tax <double>\n$tip_amount <double>\n$tolls_amount <double>\n$total_amount <double>\n$improvement_surcharge <double>\n$congestion_surcharge <double>\n...\n2 more columns\nUse `schema()` to see entire schema\n```\n\n\n:::\n:::\n\n\n\n\n## Solution 2\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntaxi_table |> collect()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6,567,396 × 22\n   vendor_name pickup_datetime     dropoff_datetime    passenger_count\n   <chr>       <dttm>              <dttm>                        <int>\n 1 VTS         2019-09-01 06:14:09 2019-09-01 06:31:52               2\n 2 VTS         2019-09-01 06:36:17 2019-09-01 07:12:44               1\n 3 VTS         2019-09-01 06:29:19 2019-09-01 06:54:13               1\n 4 CMT         2019-09-01 06:33:09 2019-09-01 06:52:14               2\n 5 VTS         2019-09-01 06:57:43 2019-09-01 07:26:21               1\n 6 CMT         2019-09-01 06:59:16 2019-09-01 07:28:12               1\n 7 CMT         2019-09-01 06:20:06 2019-09-01 06:52:19               1\n 8 CMT         2019-09-01 06:27:54 2019-09-01 06:32:56               0\n 9 CMT         2019-09-01 06:35:08 2019-09-01 06:55:51               0\n10 CMT         2019-09-01 06:19:37 2019-09-01 06:30:52               1\n# ℹ 6,567,386 more rows\n# ℹ 18 more variables: trip_distance <dbl>, pickup_longitude <dbl>,\n#   pickup_latitude <dbl>, rate_code <chr>, store_and_fwd <chr>,\n#   dropoff_longitude <dbl>, dropoff_latitude <dbl>, payment_type <chr>,\n#   fare_amount <dbl>, extra <dbl>, mta_tax <dbl>, tip_amount <dbl>,\n#   tolls_amount <dbl>, total_amount <dbl>, improvement_surcharge <dbl>,\n#   congestion_surcharge <dbl>, pickup_location_id <int>, …\n```\n\n\n:::\n:::\n\n\n\n\nor\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nas_tibble(taxi_table)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6,567,396 × 22\n   vendor_name pickup_datetime     dropoff_datetime    passenger_count\n   <chr>       <dttm>              <dttm>                        <int>\n 1 VTS         2019-09-01 06:14:09 2019-09-01 06:31:52               2\n 2 VTS         2019-09-01 06:36:17 2019-09-01 07:12:44               1\n 3 VTS         2019-09-01 06:29:19 2019-09-01 06:54:13               1\n 4 CMT         2019-09-01 06:33:09 2019-09-01 06:52:14               2\n 5 VTS         2019-09-01 06:57:43 2019-09-01 07:26:21               1\n 6 CMT         2019-09-01 06:59:16 2019-09-01 07:28:12               1\n 7 CMT         2019-09-01 06:20:06 2019-09-01 06:52:19               1\n 8 CMT         2019-09-01 06:27:54 2019-09-01 06:32:56               0\n 9 CMT         2019-09-01 06:35:08 2019-09-01 06:55:51               0\n10 CMT         2019-09-01 06:19:37 2019-09-01 06:30:52               1\n# ℹ 6,567,386 more rows\n# ℹ 18 more variables: trip_distance <dbl>, pickup_longitude <dbl>,\n#   pickup_latitude <dbl>, rate_code <chr>, store_and_fwd <chr>,\n#   dropoff_longitude <dbl>, dropoff_latitude <dbl>, payment_type <chr>,\n#   fare_amount <dbl>, extra <dbl>, mta_tax <dbl>, tip_amount <dbl>,\n#   tolls_amount <dbl>, total_amount <dbl>, improvement_surcharge <dbl>,\n#   congestion_surcharge <dbl>, pickup_location_id <int>, …\n```\n\n\n:::\n:::\n\n\n\n\nor\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nas.data.frame(taxi_table)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  vendor_name     pickup_datetime    dropoff_datetime passenger_count\n1         VTS 2019-09-01 06:14:09 2019-09-01 06:31:52               2\n2         VTS 2019-09-01 06:36:17 2019-09-01 07:12:44               1\n3         VTS 2019-09-01 06:29:19 2019-09-01 06:54:13               1\n4         CMT 2019-09-01 06:33:09 2019-09-01 06:52:14               2\n5         VTS 2019-09-01 06:57:43 2019-09-01 07:26:21               1\n  trip_distance pickup_longitude pickup_latitude     rate_code store_and_fwd\n1          9.62               NA              NA Standard rate            No\n2         26.09               NA              NA Standard rate            No\n3          7.61               NA              NA Standard rate            No\n4          3.30               NA              NA Standard rate            No\n5         18.87               NA              NA Standard rate            No\n  dropoff_longitude dropoff_latitude payment_type fare_amount extra mta_tax\n1                NA               NA         Cash        27.0   0.5     0.5\n2                NA               NA  Credit card        68.5   0.5     0.5\n3                NA               NA         Cash        25.5   0.5     0.5\n4                NA               NA  Credit card        15.0   3.0     0.5\n5                NA               NA         Cash        51.5   0.5     0.5\n  tip_amount tolls_amount total_amount improvement_surcharge\n1       0.00         6.12        36.92                   0.3\n2      23.23        20.62       116.15                   0.3\n3       0.00         0.00        26.80                   0.3\n4       0.00         0.00        18.80                   0.3\n5       0.00         0.00        52.80                   0.3\n  congestion_surcharge pickup_location_id dropoff_location_id\n1                  2.5                186                 138\n2                  2.5                138                   1\n3                  0.0                132                 203\n4                  2.5                 79                  50\n5                  0.0                132                  97\n [ reached 'max' / getOption(\"max.print\") -- omitted 6567391 rows ]\n```\n\n\n:::\n:::\n\n\n\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}