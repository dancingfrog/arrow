{
  "hash": "da14122728a2dd50b5c7888cd13d6959",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Data Manipulation Part 1 - Exercises\"\nexecute:\n  echo: true\n  messages: false\n  warning: false\neditor: source\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(stringr)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnyc_taxi <- open_dataset(\"data/nyc-taxi/\")\n```\n:::\n\n\n\n\n::: {#exercise-collect .callout-tip}\n# Using `collect()` to run a query\n\n::: panel-tabset\n## Problems\n\nUse the function `nrow()` to work out the answers to these questions:\n\n1.  How many taxi fares in the dataset had a total amount greater than \\$100?\n\n\n## Solution 1\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnyc_taxi |>\n  filter(total_amount > 100) |>\n  nrow()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1518869\n```\n\n\n:::\n:::\n\n\n\n\n:::\n:::\n\n::: {#exercise-dplyr-api .callout-tip}\n# Using the dplyr API in arrow\n\n::: panel-tabset\n## Problems\n\n1.  Use the `dplyr::filter()` and `stringr::str_ends()` functions to return a subset of the data which is a) from September 2020, and b) the value in `vendor_name` ends with the letter \"S\".\n\n2.  Try to use the `stringr` function `str_replace_na()` to replace any `NA` values in the `vendor_name` column with the string \"No vendor\" instead. What happens, and why?\n\n3.  Bonus question: see if you can find a different way of completing the task in question 2.\n\n## Solution 1\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnyc_taxi |>\n  filter(str_ends(vendor_name, \"S\"), year == 2020,  month == 9) |>\n  collect()\n```\n:::\n\n\n\n\n## Solution 2 and 3\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnyc_taxi |>\n  mutate(vendor_name = stringr::str_replace_na(vendor_name, \"No vendor\")) |>\n  head() |>\n  collect()\n```\n:::\n\n\n\n\nThis won't work as `stringr::str_replace_na()` hasn't been implemented in Arrow. You could try using `mutate()` and `ifelse()` here instead.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnyc_taxi |>\n  mutate(vendor_name = ifelse(is.na(vendor_name), \"No vendor\", vendor_name)) |>\n  head() |>\n  collect()\n```\n:::\n\n\n\n\nOr, if you only needed a subset of the data, you could apply the function after collecting it into R memory.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnyc_taxi |>\n  filter(year == 2019, month == 10) |> # smaller subset of the data\n  collect() |>\n  mutate(vendor_name = stringr::str_replace_na(vendor_name, \"No vendor\"))\n```\n:::\n\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}